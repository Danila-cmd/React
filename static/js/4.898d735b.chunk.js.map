{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","item","src","avatar","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","idName","map","d","key","messageElements","messagesData","m","newMessageText","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","isAuth","React","auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,wB,+FCmBnMC,EAhBI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GACT,yBAAKE,UAAWC,IAAEI,MACd,yBAAKC,IAAKT,EAAMU,SACfV,EAAMW,SCJZC,EANC,SAACZ,GACb,OACI,yBAAKG,UAAWC,IAAES,SAAUb,EAAMa,U,iCCGpCC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACjB,GACpB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAASX,GACpBH,KAAM,iBAAkBe,YAAa,wBAEhD,6BACI,6CAoCDC,EA5BC,SAAC3B,GAEb,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,OAAOC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE/B,GAAIA,GAAI+B,EAAE/B,GAAIQ,OAAQuB,EAAEvB,YACjGyB,EAAkBP,EAAMQ,aAAaJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEnC,QAChE0B,EAAMU,eAM5B,OACI,yBAAKnC,UAAWC,IAAEmC,SACd,yBAAKpC,UAAWC,IAAEoC,cACbV,GAEL,yBAAK3B,UAAWC,IAAEqC,UACd,6BAAMN,GACN,6BACI,kBAACnB,EAAD,CAAqBG,SAZjB,SAACuB,GACjB1C,EAAM2C,YAAYD,EAAOE,uB,uDCblBC,sBACXC,aAjBkB,SAAClB,GAEnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GAEtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAwBJ,UCdb,SAACK,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKnD,MAAMoD,OACT,kBAACH,EAAcE,KAAKnD,OADI,kBAAC,IAAD,CAAUO,GAAI,eAJV,GAEX8C,IAAMJ,WAatC,OAFqCH,aAJJ,SAAClB,GAAD,MAAY,CACzCwB,OAAQxB,EAAM0B,KAAKF,UAGcN,CAAoCI,KDM9DL,CAGdlB","file":"static/js/4.898d735b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1XNcO\",\"dialogsItems\":\"Dialogs_dialogsItems__EIVLB\",\"active\":\"Dialogs_active__3dQeO\",\"messages\":\"Dialogs_messages__3mVaD\",\"message\":\"Dialogs_message__2LP5H\",\"item\":\"Dialogs_item__2i2rk\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>\r\n                <div className={s.item}>\r\n                    <img src={props.avatar}/>\r\n                    {props.name}\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required,maxLength50 ]}\r\n                       name={\"newMessageBody\"} placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.idName.map(d => <DialogItem name={d.name} key={d.id} id={d.id} avatar={d.avatar}/>);\r\n    let messageElements = state.messagesData.map(m => <Message message={m.message} key={m.id}/>)\r\n    let newMessagesBody = state.newMessageText;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs);","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"sourceRoot":""}