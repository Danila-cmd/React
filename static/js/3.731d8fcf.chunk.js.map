{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","window","MyPosts","memo","console","log","postsElements","postsData","map","p","post","postsBlock","values","addPost","posts","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.731d8fcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2CYKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3ljX5\",\"posts\":\"MyPosts_posts__bBcrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Y_OE\"};","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    // let stateWithSetState = useState(false);\r\n\r\n    // let editMode = stateWithSetState[0]; // значение\r\n    // let setEditMode = stateWithSetState[1]; // функция которая это значение устанавливает\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activatedEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.ucrazy.ru/files/i/2013.3.31/1364704553_z26.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>like </span>{props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"addPost\"} component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\nwindow.props = [];\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER yo\");\r\n\r\n    let postsElements =\r\n        props.postsData.map(p => <Post message={p.post} likesCount={p.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost((values.addPost));\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <MyPostFormRedux onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (addPost) => {\r\n            dispatch(addPostActionCreator(addPost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    console.log(\"profile\");\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile = {props.profile} status = {props.status} updateStatus = {props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps PROFILE');\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}