{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","onClick","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","toLocaleLowerCase","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPostFormRedux","Field","name","component","validate","required","window","MyPosts","memo","console","log","postsElements","postsData","p","id","post","postsBlock","values","addPost","posts","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0be593b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2CYKg\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3dx6q\",\"contact\":\"ProfileInfo_contact__3nzQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3ljX5\",\"posts\":\"MyPosts_posts__bBcrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Y_OE\"};","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    // let stateWithSetState = useState(false);\r\n\r\n    // let editMode = stateWithSetState[0]; // значение\r\n    // let setEditMode = stateWithSetState[1]; // функция которая это значение устанавливает\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status :</b><span onDoubleClick={activatedEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit,profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button onClick={() => {}}>save</button>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n        </div>\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:{createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me</b>:{createField(\"About me\", \"aboutMe\", [], Input)}\r\n        </div>\r\n\r\n        <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key.toLocaleLowerCase(), [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from \"../../../assets/images/userPhoto.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit =  (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <b>{contactTitle} : {contactValue}</b>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.ucrazy.ru/files/i/2013.3.31/1364704553_z26.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>like </span>{props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"addPost\"} component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\nwindow.props = [];\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER yo\");\r\n\r\n    let postsElements =\r\n        props.postsData.map(p => <Post key={p.id} message={p.post} likesCount={p.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost((values.addPost));\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <MyPostFormRedux onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (addPost) => {\r\n            dispatch(addPostActionCreator(addPost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    console.log(\"profile\");\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto = {this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps PROFILE');\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto,saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}